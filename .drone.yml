# automatically generated from https://github.com/metwork-framework/resources/blob/master/cookiecutter/%7B%7Bcookiecutter.repo%7D%7D/docker-mfxxx-yyy-buildimage_drone.yml)


    
    
    


trigger_common: &trigger_common
  image: metwork/drone-downstream-specific-image:latest
  pull: true
  secrets: [ downstream_token, downstream_server ]
  params:
    - FORCED_OS_VERSION=centos7



pipeline:
  docker:
    image: metwork/drone-docker-specific-image:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root:/root
    commands:
      - HASH_BEFORE=`docker images -q metwork/mfxxx-centos7-buildimage:${DRONE_BRANCH}`
      - if test "${DRONE_BRANCH}" = "master"; then
          docker build -t metwork/mfxxx-centos7-buildimage:master -t metwork/mfxxx-centos7-buildimage:latest --build-arg BRANCH=master --build-arg CACHEBUST=${DRONE_BUILD_NUMBER} .;
        elif test "${DRONE_BRANCH}" = "integration"; then
          docker build -t metwork/mfxxx-centos7-buildimage:integration --build-arg BRANCH=integration --build-arg CACHEBUST=${DRONE_BUILD_NUMBER} .;
        else
          docker build -t metwork/mfxxx-centos7-buildimage:${DRONE_BRANCH} --build-arg BRANCH=master --build-arg CACHEBUST=${DRONE_BUILD_NUMBER} .;
        fi
      - HASH_AFTER=`docker images -q metwork/mfxxx-centos7-buildimage:${DRONE_BRANCH}`
      - if test "$${HASH_BEFORE}" = "$${HASH_AFTER}"; then
          touch .drone_downstream_bypass;
        else
          if test "${DRONE_BRANCH}" = "master"; then
            docker push metwork/mfxxx-centos7-buildimage:${DRONE_BRANCH};
            docker push metwork/mfxxx-centos7-buildimage:latest;
          elif test "${DRONE_BRANCH}" = "integration"; then
            docker push metwork/mfxxx-centos7-buildimage:${DRONE_BRANCH};
          fi;
        fi
    when:
      event: push

  trigger_master:
    <<: *trigger_common
    repositories:

      - metwork-framework/mfserv@master
      - metwork-framework/mfdata@master
      - metwork-framework/mfbase@master
      - metwork-framework/mfadmin@master
      - metwork-framework/mfsysmon@master

    when:
      status: success
      event: push
      branch: master
  trigger_integration:
    <<: *trigger_common
    repositories:

      - metwork-framework/mfserv@integration
      - metwork-framework/mfdata@integration
      - metwork-framework/mfbase@integration
      - metwork-framework/mfadmin@integration
      - metwork-framework/mfsysmon@integration

    when:
      status: success
      event: push
      branch: integration


branches: [ master, integration, ci_*, pci_* ]
